import { Card } from '../types'

export const qaCards: Card[] = [
  {
    id: 1,
    question: {
      en: 'What is failure and recovery testing?',
      ru: '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –æ—Ç–∫–∞–∑ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ?'
    },
    answer: {
      en: `Failure and recovery testing checks how a system behaves during failures and how well it recovers afterward.

### Simulate failure:
- Internet connection is lost  
- Backend is restarted  
- Database is stopped  
- Browser is closed during work  

### Then observe:
- Does it show a clear error message?  
- Is data preserved?  
- Does the UI freeze?  

### Recovery phase:
- Does it resume automatically?  
- Is user input still available?  
- Are retries triggered?  

### What to check:
- Clear error messages on frontend  
- User input is preserved  
- Retry mechanisms and reconnections  
- Speed and correctness of recovery  
- Logging and traceability  

### Real-world examples:
- Google Chrome restores tabs  
- YouTube resumes from where it stopped  
- Telegram keeps typed messages  
- Shopping carts stay saved (e.g., Amazon)  
- Google Docs auto-recovers unsaved changes`,

      ru: `–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –æ—Ç–∫–∞–∑ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –≤–µ–¥—ë—Ç —Å–µ–±—è –ø—Ä–∏ —Å–±–æ—è—Ö –∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∏—Ö.

### –ü—Ä–∏–º–µ—Ä—ã –æ—Ç–∫–∞–∑–æ–≤:
- –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞  
- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend  
- –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö  
- –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã  

### –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ:
- –ü–æ—è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ  
- –°–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ª–∏ –¥–∞–Ω–Ω—ã–µ  
- –ù–µ –∑–∞–≤–∏—Å–∞–µ—Ç –ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å  

### –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏:
- –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏  
- –°–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥  
- –°—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞  

### –ß—Ç–æ –≤–∞–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:
- –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö  
- –°–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö  
- –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏  
- –°–∫–æ—Ä–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è  
- –ó–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–∞—Ö  

### –ü—Ä–∏–º–µ—Ä—ã –∏–∑ –∂–∏–∑–Ω–∏:
- –í–∫–ª–∞–¥–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –≤ Google Chrome  
- –í–∏–¥–µ–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –≤ YouTube  
- Telegram —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è  
- –ö–æ—Ä–∑–∏–Ω–∞ –æ—Å—Ç–∞—ë—Ç—Å—è –Ω–∞ Ozon –∏–ª–∏ Wildberries  
- –í Google Docs –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è —á–µ—Ä–Ω–æ–≤–∏–∫–∏`
    },
    category: '–¢–µ—Å—Ç-–¥–∏–∑–∞–π–Ω',
    tag: 'reliability',
    status: 'learning'
  },
  {
  id: 2,
  question: {
    en: 'What to do if clicking a button doesn‚Äôt write to the logs, even though logging is expected right after the backend receives the request?',
    ru: '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ª–æ–≥ –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è, —Ö–æ—Ç—è –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –æ–Ω –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –±—ç–∫–µ–Ω–¥–æ–º?'
  },
  answer: {
    en: `If a log is expected as soon as the backend receives the request, but nothing appears, go through this checklist:

### ‚úÖ Frontend:
- Is the request sent at all?
- Check in DevTools ‚Üí Network tab
- If not ‚Äî maybe the event isn‚Äôt triggered or validation blocks submission

### ‚úÖ Backend:
- Is the route actually triggered? Add a quick \`console.log\`
- Is logging placed **before** any \`await\` or heavy operations?
- Could there be early returns or errors before the log?
- Is there a \`try/catch\` that silently swallows errors?

### ‚úÖ Logger config:
- Is the logger imported and active in this handler?
- Is the environment filtering out certain log levels?
- Does the current log level (e.g. \`info\`) actually get output?

### ‚úÖ Output location:
- Logs might be sent to a file instead of the console
- Or filtered by logger settings and not visible

### üß™ Tip:
Try sending a minimal request to rule out issues with body data or auth.`,
    
    ru: `–ï—Å–ª–∏ –ª–æ–≥ –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –±—ç–∫–µ–Ω–¥ –ø–æ–ª—É—á–∏–ª –∑–∞–ø—Ä–æ—Å, –Ω–æ —ç—Ç–æ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç ‚Äî —Å—Ç–æ–∏—Ç –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ —á–µ–∫–ª–∏—Å—Ç—É:

### ‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥:
- –£—Ö–æ–¥–∏—Ç –ª–∏ –≤–æ–æ–±—â–µ –∑–∞–ø—Ä–æ—Å?
- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ DevTools ‚Üí –≤–∫–ª–∞–¥–∫–∞ Network
- –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É

### ‚úÖ –ë—ç–∫–µ–Ω–¥:
- –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª–∏ –Ω—É–∂–Ω—ã–π —Ä–æ—É—Ç? –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ \`console.log\`
- –°—Ç–æ–∏—Ç –ª–∏ –ª–æ–≥ –¥–æ –≤—Å–µ—Ö \`await\` –∏ —Ç—è–∂—ë–ª—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π?
- –ï—Å—Ç—å –ª–∏ —Ä–∞–Ω–Ω–∏–µ \`return\` –∏–ª–∏ –æ—à–∏–±–∫–∏ –¥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è?
- –ü—Ä–æ–≥–ª–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –≤ \`try/catch\`?

### ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–≥–µ—Ä–∞:
- –ü–æ–¥–∫–ª—é—á—ë–Ω –ª–∏ –ª–æ–≥–≥–µ—Ä –≤ —ç—Ç–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ?
- –ù–µ —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ª–∏ –ª–æ–≥–∏ –ø–æ —É—Ä–æ–≤–Ω—é? (–Ω–∞–ø—Ä–∏–º–µ—Ä, \`info\` –º–æ–∂–µ—Ç –Ω–µ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è)
- –í–∫–ª—é—á—ë–Ω –ª–∏ –≤—ã–≤–æ–¥ –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ?

### ‚úÖ –ö—É–¥–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ª–æ–≥:
- –í–æ–∑–º–æ–∂–Ω–æ, –ª–æ–≥ —É—Ö–æ–¥–∏—Ç –≤ —Ñ–∞–π–ª, –∞ –Ω–µ –≤ –∫–æ–Ω—Å–æ–ª—å
- –ò–ª–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏–∑-–∑–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏

### üß™ –°–æ–≤–µ—Ç:
–û—Ç–ø—Ä–∞–≤—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–µ–ª–∞ ‚Äî —Ç–∞–∫ –ø—Ä–æ—â–µ –∏—Å–∫–ª—é—á–∏—Ç—å –æ—à–∏–±–∫–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏`
  },
  category: '–ü—Ä–∞–∫—Ç–∏–∫–∞',
  tag: 'logging',
  status: 'learning'
}
,

  {
    id: 3,
    question: { en: 'Question 3', ru: '–í–æ–ø—Ä–æ—Å 3' },
    answer: { en: 'Answer 3', ru: '–û—Ç–≤–µ—Ç 3' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  },
  {
    id: 4,
    question: { en: 'Question 4', ru: '–í–æ–ø—Ä–æ—Å 4' },
    answer: { en: 'Answer 4', ru: '–û—Ç–≤–µ—Ç 4' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  },
  {
    id: 5,
    question: { en: 'Question 5', ru: '–í–æ–ø—Ä–æ—Å 5' },
    answer: { en: 'Answer 5', ru: '–û—Ç–≤–µ—Ç 5' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  },
  {
    id: 6,
    question: { en: 'Question 6', ru: '–í–æ–ø—Ä–æ—Å 6' },
    answer: { en: 'Answer 6', ru: '–û—Ç–≤–µ—Ç 6' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  },
  {
    id: 7,
    question: { en: 'Question 7', ru: '–í–æ–ø—Ä–æ—Å 7' },
    answer: { en: 'Answer 7', ru: '–û—Ç–≤–µ—Ç 7' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  },
  {
    id: 8,
    question: { en: 'Question 8', ru: '–í–æ–ø—Ä–æ—Å 8' },
    answer: { en: 'Answer 8', ru: '–û—Ç–≤–µ—Ç 8' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  },
  {
    id: 9,
    question: { en: 'Question 9', ru: '–í–æ–ø—Ä–æ—Å 9' },
    answer: { en: 'Answer 9', ru: '–û—Ç–≤–µ—Ç 9' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  },
  {
    id: 10,
    question: { en: 'Question 10', ru: '–í–æ–ø—Ä–æ—Å 10' },
    answer: { en: 'Answer 10', ru: '–û—Ç–≤–µ—Ç 10' },
    category: 'Dummy',
    tag: 'test',
    status: 'learning'
  }
]
